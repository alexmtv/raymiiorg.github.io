<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag networkon Raymii.org</title> 
            <link>https://raymii.org/s/tags/network.xml</link> 
            <description>RSS feed for tag networkon Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/network.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Keepalived notify script, execute action on failover</title> 
                <link>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived_notify_script_execute_action_on_failover.html</guid>
                <description>Keepalived supports running scripts on VRRP state change. This can come in handy when you need to execute an action when a failover occurs. In my case, I have a VPN running on a Virtual IP and want to make sure the VPN only runs on the node with the Virtual IP.</description> 
                <pubDate>Sun, 26 Oct 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Traceroute to Smokeping Target config</title> 
                <link>https://raymii.org/s/snippets/Traceroute_to_Smokeping_Target_Config.html</link> 
                <guid>https://raymii.org/s/snippets/Traceroute_to_Smokeping_Target_Config.html</guid>
                <description>This little one-liner converts the output of traceroute to Smokeping Target output. This way you can build your smokeping config faster.</description> 
                <pubDate>Sat, 28 Jun 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Simple keepalived failover setup on Ubuntu 14.04</title> 
                <link>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html</link> 
                <guid>https://raymii.org/s/tutorials/Keepalived-Simple-IP-failover-on-Ubuntu.html</guid>
                <description>We are going to set up very simple keepalived IP failover on Ubuntu 14.04. Keepalived is a piece of software which can be used to achieve high availability by assigning two or more nodes a virtual IP and monitoring those nodes, failing over when one goes down.  Keepalived can do more, like load balancing and monitoring, but this tutorial focusses on a very simple setup, just IP failover.</description> 
                <pubDate>Fri, 13 Jun 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>KVM host with bonding and VLAN tagged Virtual Machines setup on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/KVM_with_bonding_and_VLAN_tagging_setup_on_Ubuntu_12.04.html</link> 
                <guid>https://raymii.org/s/tutorials/KVM_with_bonding_and_VLAN_tagging_setup_on_Ubuntu_12.04.html</guid>
                <description>This tutorial shows you how to setup Ubuntu 12.04 as a KVM host with multiple virtual machines. The kvm host will have VM's in multiple VLAN's and will handle the VLAN tagging over a bonded interface. It also covers creation of an example virtual machine with the ubuntu vmbuilder tool and shows you how to add a serial console to an ubuntu 12.04 virtual machine for troubleshooting.</description> 
                <pubDate>Sat, 15 Feb 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Bonding NIC Teaming on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/NIC_Bonding_on_Ubuntu_12.04.html</link> 
                <guid>https://raymii.org/s/tutorials/NIC_Bonding_on_Ubuntu_12.04.html</guid>
                <description>This tutorial shows you how to setup NIC bonding / NIC teaming on Ubuntu 12.04. Bonding, also called port trunking or link aggregation means combining several network interfaces (NICs) to a single link, providing either high-availability, load-balancing, maximum throughput, or a combination of these.</description> 
                <pubDate>Fri, 14 Feb 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>haproxy: add strict transport security or any other http header</title> 
                <link>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html</link> 
                <guid>https://raymii.org/s/snippets/haproxy_add_strict_transport_security_or_any_other_http_header.html</guid>
                <description>This snippet shows you how to add a header to a haproxy response, for example, the HSTS header (http strict transport security).</description> 
                <pubDate>Wed, 11 Dec 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>ntop-ng 1.1 installation on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html</link> 
                <guid>https://raymii.org/s/tutorials/ntop-ng-installation-on-Ubuntu.html</guid>
                <description>This is a guide on installing the latest ntop-ng (1.1) on Ubuntu 12.04. ntopng is the next generation version of the original ntop, a network traffic probe that shows the network usage, similar to what the popular top Unix command does. ntop is based on libpcap and it has been written in a portable way in order to virtually run on every Unix platform, MacOSX and on Win32 as well. ntopng users can use a a web browser to navigate through ntop (that acts as a web server) traffic information and get a dump of the network status. In the latter case, ntop can be seen as a simple RMON-like agent with an embedded web interface. This tutorial will walk you through the compilation and installation of ntopng from source.</description> 
                <pubDate>Fri, 29 Nov 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Corosync Pacemaker - Execute script on failover</title> 
                <link>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html</link> 
                <guid>https://raymii.org/s/tutorials/Corosync_Pacemaker_-_Execute_a_script_on_failover.html</guid>
                <description>With Corosync/Pacemaker there is no easy way to simply run a script on failover. There are good reasons for this, but sometimes you want to do something simple. This tutorial describes how to change the Dummy OCF resource to execute a script on failover.</description> 
                <pubDate>Wed, 20 Nov 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Corosync Notes</title> 
                <link>https://raymii.org/s/snippets/Corosync_Notes.html</link> 
                <guid>https://raymii.org/s/snippets/Corosync_Notes.html</guid>
                <description>These are my notes and command snippets for usage with Corosync.</description> 
                <pubDate>Sat, 02 Nov 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>IPv4 Address Conversion Tricks</title> 
                <link>https://raymii.org/s/articles/IPv4_Address_Conversion_Tricks.html</link> 
                <guid>https://raymii.org/s/articles/IPv4_Address_Conversion_Tricks.html</guid>
                <description>Did you know that http://3515693643/ is a valid link? Why? Because this is the decimal form of the binary IP address. Normally we represent IP addresses as 10.0.0.1, 4 blocks of numbers. Those numbers are actually binary octets represented in decimal, therefore they can never be more than 255. If we take the whole binary number of all blocks, and convert that to base 10, we get a result like above, which in turn is a working network address. I've written a little javascript based converter so you can try it out yourself.</description> 
                <pubDate>Sun, 01 Sep 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Fix CentOS IPTables rule saving (iptables: Saving firewall rules to /etc/sysconfig/iptables: /etc/init.d/iptables: line 274: restorecon: command not found)</title> 
                <link>https://raymii.org/s/snippets/CentOS_Save_iptables_restorecon_error.html</link> 
                <guid>https://raymii.org/s/snippets/CentOS_Save_iptables_restorecon_error.html</guid>
                <description>On a default CentOS installation, when trying to execute the iptables save command you can get an error like iptables: Saving firewall rules to /etc/sysconfig/iptables: /etc/init.d/iptables: line 274: restorecon: command not found. Read this article to find out how to fix it.</description> 
                <pubDate>Wed, 23 Jan 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>CIDR Cheatsheet</title> 
                <link>https://raymii.org/s/software/CIDR-Cheatsheet.html</link> 
                <guid>https://raymii.org/s/software/CIDR-Cheatsheet.html</guid>
                <description>This is a handy CIDR cheatsheet.</description> 
                <pubDate>Tue, 11 Dec 2012 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Persistent reverse (NAT bypassing) SSH tunnel access with autossh</title> 
                <link>https://raymii.org/s/tutorials/Autossh_persistent_tunnels.html</link> 
                <guid>https://raymii.org/s/tutorials/Autossh_persistent_tunnels.html</guid>
                <description>Not available.</description> 
                <pubDate>Fri, 05 Oct 2012 00:00:00 GMT</pubDate>
            </item>
    
        </channel>
    </rss>
    
    