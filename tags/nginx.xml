<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag nginx on Raymii.org</title> 
            <link>https://raymii.org/s/tags/nginx.xml</link> 
            <description>RSS feed for tag nginx on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/nginx.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>Let's Encrypt with DirectAdmin, now built in!</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin_Now_Built_In.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. DirectAdmin now supports Lets Encrypt natively since 1.50, so no more ssh fiddling, just via the control panel, for all the users on the server.</description> 
                <pubDate>Wed, 24 Feb 2016 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Ansible playbook for GoAccess Log Analyzer</title> 
                <link>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html</link> 
                <guid>https://raymii.org/s/software/Ansible_role_for_GoAccess_Log_Analyzer.html</guid>
                <description>This is a small Ansible playbook to deploy the GoAccess log analyzer on Debian based systems. Next to Piwik, I use goaccess myself to get better insights in who and what visits my servers. This role is ment to be included in your webserver playbooks.</description> 
                <pubDate>Sun, 17 Jan 2016 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Let's Encrypt with DirectAdmin or other Web Control Panels</title> 
                <link>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html</link> 
                <guid>https://raymii.org/s/articles/Lets_Encrypt_Directadmin.html</guid>
                <description>Let's Encrypt is a new certificate authority, recognized by all major browsers. They make it a breeze to set up TLS certificates for your web server. And for free! Let's Encrypt is supported by major players like Mozilla, Akamai, Cisco, the EFF, the Internet Security Research Group and others. Let's Encrypt provides free, automatic and secure certificates so that every website can be secured with an SSL certificate. This article shows you how to setup Let's Encrypt with the DirectAdmin web control panel. The guide is generic, so it works for other controlpanels as well. For now it works with the beta, and required some linux knowledge and root access to the hosting server.</description> 
                <pubDate>Thu, 10 Dec 2015 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Strong SSL Security on nginx</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the nginx webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>HTTP Public Key Pinning Extension HPKP for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</link> 
                <guid>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</guid>
                <description>Public Key Pinning means that a certificate chain must include a whitelisted public key. It ensures only whitelisted Certificate Authorities (CA) can sign certificates for `*.example.com`, and not any CA in your browser store. This article has background theory and configuration examples for Apache, Lighttpd and NGINX.</description> 
                <pubDate>Tue, 30 Dec 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>HTTP Strict Transport Security for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</link> 
                <guid>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</guid>
                <description>HTTP Strict Transport Security (often abbreviated as HSTS) is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. This tutorial will show you how to set up HSTS in Apache2, NGINX and Lighttpd.</description> 
                <pubDate>Mon, 29 Dec 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Ansible - Only if a file exists or does not exist</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only_if_a_file_exists_or_does_not_exist.html</guid>
                <description>This Ansible playbook example helps you execute actions only if a file exists or does not exist. If you for example have a command you need to run to generate a certificate (or Diffie Hellman parameters for nginx) you only want to do that once. The command itself is not convergent so it will run with every ansible run. However, the command creates a file and Ansible is able to check if that file exists. If the file exists, it will not execute the action. The same goes for checking if a file does exist and only executing the action if it exists. (The action you want to do will remove that file).</description> 
                <pubDate>Sat, 27 Dec 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>OCSP Stapling on nginx</title> 
                <link>https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html</link> 
                <guid>https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html</guid>
                <description>This tutorial shows you how to set up OCSP stapling on nginx. OCSP stapling is an enhancement to the standard OCSP protocol that delivers OCSP responses from the server with the certificate, eliminating the need for relying parties (web users) to check OCSP responses with the issuing CA. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session.</description> 
                <pubDate>Mon, 03 Feb 2014 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Ansible - Only do something if another action changed</title> 
                <link>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html</link> 
                <guid>https://raymii.org/s/tutorials/Ansible_-_Only-do-something-if-another-action-changed.html</guid>
                <description>This Ansible tutorial shows you how execute actions only if another action has changed. For example, a playbook which downloads a remote key for package signing but only executes the apt-add command if the key has changed. Or a playbook which clones a git repository and only restarts a service if the git repository has changed.</description> 
                <pubDate>Sun, 22 Dec 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Self Hosted CryptoCat - Secure self hosted multiuser webchat</title> 
                <link>https://raymii.org/s/tutorials/Self_Hosted_CryptoCat_-_Secure_Self_Hosted_Multiuser_Webchat.html</link> 
                <guid>https://raymii.org/s/tutorials/Self_Hosted_CryptoCat_-_Secure_Self_Hosted_Multiuser_Webchat.html</guid>
                <description>This is a guide on setting up a self hosted secure multiuser webchat service with CryptoCat. It covers the set up of ejabberd, nginx and the web interface for CryptoCat. It supports secure encrypted group chat, secure encrypted private chat and file and photo sharing.</description> 
                <pubDate>Sat, 09 Nov 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Pass the SSL Labs Test on NGINX (Mitigate the CRIME and BEAST attack, Disable SSLv2 and Enable Perfect Forward Secrecy).</title> 
                <link>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_NGINX_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</link> 
                <guid>https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_NGINX_(Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS).html</guid>
                <description>This tutorial shows you how to get an A on the SSL Labs test using the NGINX webserver. We do this by disabling CBC based ciphers to mitigate the BEAST attack, disabling SSL Compression to mitigate the CRIME attack, disable SSLv2 and below because of vulnerabilities in the protocol and we will enable Perfect Forward Secrecy when possible. This way we have a future proof ssl configuration and we get an A on the Qually Labs SSL Test.</description> 
                <pubDate>Tue, 23 Jul 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Set up a Collectd server with web frontend</title> 
                <link>https://raymii.org/s/tutorials/Collectd_server_setup_tutorial_with_web_frontend.html</link> 
                <guid>https://raymii.org/s/tutorials/Collectd_server_setup_tutorial_with_web_frontend.html</guid>
                <description>This tutorial shows you how to set up a collectd server. It also shows you how to set up the collectd-web frontend, an interactive gui for collectd, and has it all firewalled. What is collectd? collectd gathers statistics about the system it is running on and stores this information. Those statistics can then be used to find current performance bottlenecks (i.e. performance analysis) and predict future system load (i.e. capacity planning). Or if you just want pretty graphs of your private server and are fed up with some homegrown solution you're at the right place, too ;). A collectd server is able to receive data from collectd clients.</description> 
                <pubDate>Tue, 09 Apr 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>NGINX: Proxy folders to different root</title> 
                <link>https://raymii.org/s/tutorials/NGINX_proxy_folder_to_different_root.html</link> 
                <guid>https://raymii.org/s/tutorials/NGINX_proxy_folder_to_different_root.html</guid>
                <description>This tutorial shows you how to have NGINX use different folders as different upstream proxy's, without the proxy also having the folder. For example, if you proxy www.example.com/wiki to server wiki.example.com, by default it will go to wiki.example.com/wiki. This tutorial has a rewrite rule to fix that.</description> 
                <pubDate>Thu, 04 Apr 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>NGINX: Catch all error codes</title> 
                <link>https://raymii.org/s/snippets/NGINX_Catch_all_error_codes.html</link> 
                <guid>https://raymii.org/s/snippets/NGINX_Catch_all_error_codes.html</guid>
                <description>This little nginx config snippet shows you how to catch all error codes and show a single unified error page.</description> 
                <pubDate>Wed, 13 Mar 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>NGINX: Hide / Block .git and .svn folders</title> 
                <link>https://raymii.org/s/snippets/NGINX_Block_access_to_.git_or_.svn_project_folders.html</link> 
                <guid>https://raymii.org/s/snippets/NGINX_Block_access_to_.git_or_.svn_project_folders.html</guid>
                <description>This little nginx config snippets helps you prohibit access to .git or .svn folders in nginx</description> 
                <pubDate>Wed, 13 Mar 2013 00:00:00 GMT</pubDate>
            </item>
    
            <item>
                <title>Munin - Set up the NGINX status plugin on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/snippets/Munin-NGINX-Status-Plugin-Ubuntu-12.04.html</link> 
                <guid>https://raymii.org/s/snippets/Munin-NGINX-Status-Plugin-Ubuntu-12.04.html</guid>
                <description>This little tutorial will show you how to set up the Munin plugin to monitor NGINX (nginx_request and nginx_status) and graph it. You need to change some URLs in the config because by default this is wrong.</description> 
                <pubDate>Thu, 31 Jan 2013 00:00:00 GMT</pubDate>
            </item>
    
        </channel>
    </rss>
    
    